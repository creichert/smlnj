'\" t
.\"     Title: ml-ulex
.\"    Author: [see the "AUTHOR" section]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 12/21/2014
.\"    Manual: \ \&
.\"    Source: SML/NJ 110.77
.\"  Language: English
.\"
.TH "ML\-ULEX" "1" "12/21/2014" "SML/NJ 110\&.77" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
ml-ulex \- a Unicode\-compatible lexical analyser generator
.SH "SYNOPSIS"
.sp
\fBml\-ulex\fR [\fIOPTIONS\fR] \fIfile\fR
.SH "DESCRIPTION"
.sp
Ml\-ulex is a lexer generator that supports Unicode characters (in UTF\-8 representation) and an extended form of regular expressions\&.
.SH "OPTIONS"
.PP
\fB\-\-dot\fR
.RS 4
generate DOT output (http://www\&.graphviz\&.org)\&. The generated file will be named
file\&.dot, where
file
is the input file\&.
.RE
.PP
\fB\-\-match\fR
.RS 4
enter interactive matching mode\&. This will allow interactive testing of the machine; presently, only the
INITIAL
start state is available for testing (see the
User Guide
for details on start states)\&.
.RE
.PP
\fB\-\-ml\-lex\-mode\fR
.RS 4
operate in
\fBml\-lex\fR
compatibility mode\&.
.RE
.PP
\fB\-\-table\-based\fR
.RS 4
generate a table\-based lexer\&.
.RE
.PP
\fB\-\-fn\-based\fR
.RS 4
generate a lexer that represents states as functions and transitions as tail calls\&.
.RE
.PP
\fB\-\-minimize\fR
.RS 4
generate a minimal machine\&. Note that this is slow, and is almost never necessary\&.
.RE
.PP
\fB\-\-strict\-sml\fR
.RS 4
generate strict SML (\fIi\&.e\&.\fR, do not use SML/NJ extensions)\&. This flag is useful if you want to use the output with a different SML system\&.
.RE
.SH "AUTHOR"
.sp
ml\-ulex(1) was written by Aaron Turon\&.
.SH "COPYING"
.sp
Copyright \(co 2014 The Fellowship of SML/NJ
.sp
This is free software; see the source for copying conditions\&. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE\&.
.SH "SEE-ALSO"
.sp
ml\-antlr(1)
.sp
The \fISML/NJ Language Processing Tools: User Guide\fR\&.
.sp
\fBRegular\-expression derivatives reexamined\fR by Scott Owens, John Reppy, and Aaron Turon\&. \fIJournal of Functional Programming\fR, 19(2):173\-190, 2009\&.
